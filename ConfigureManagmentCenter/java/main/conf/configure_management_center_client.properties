# ====================Note======================
#
# This file is a sample used to set the properties of 
# clients who want to access the configure management center
# the ids of below are not allowed to be changed
# 'serviceCenterGetServiceList', 
# 'serviceCenterRegister', 
# 'serviceCenterUnregister'
# the service name 'serviceCenter' is not allowed to be changed too
# =============================================
#
#
#
# Configure the default route
route.default.id=defaultRoute
route.default.class=service.framework.route.DefaultRoute
route.default.property1=localhost
route.default.property2=5002
# Configure the configure management center for 
# the route to access configure management center
route.route1.id=serviceRoute
# below route is used to connect to the service directly, it is used for 
# register & unregister the service 
# route.route1.class=service.framework.route.DefaultRoute
route.route1.class=service.framework.route.DefaultRoute
route.route1.property1=localhost
route.route1.property2=5002
# Configure the configure management center for 
# the route to access configure management center
route.route2.id=serviceClientRoute
# we could also use the below routes, this is used for get the service list 
# route.route1.class=management.service.center.route.ServiceCenterConsistentHashRoute
# route.route1.class=management.service.center.route.ServiceCenterRoute
route.route2.class=management.service.center.route.ServiceCenterRoute
route.route2.property1=localhost
route.route2.property2=5002
# Configure the route for heart beat
route.route3.id=heartBeatRoute
# we could also use the below routes, this is used for get the service list 
# route.route1.class=management.service.center.route.ServiceCenterConsistentHashRoute
# route.route1.class=management.service.center.route.ServiceCenterRoute
route.route3.class=management.service.center.route.ServiceCenterHeartBeatRoute
# Configure the client register the service list
client.service1.id=serviceCenterRegister
client.service1.name=serviceCenter
client.service1.method=register
client.service1.version=version
client.service1.group=test
client.service1.routeid=serviceRoute

# Configure the client get the service list
client.service2.id=serviceCenterGetServiceList
client.service2.name=serviceCenter
client.service2.method=getServiceList
client.service2.version=version
client.service2.group=test
client.service2.routeid=serviceClientRoute

# Configure the client unregister the service list
client.service3.id=serviceCenterUnregister
client.service3.name=serviceCenter
client.service3.method=removeServiceList
client.service3.version=version
client.service3.group=test
client.service3.routeid=serviceRoute

# Configure the client register client to the configure management center
# this will give one way of notify the client the service list change
client.service4.id=serviceCenterRegisterClient
client.service4.name=serviceCenter
client.service4.method=registerClientList
client.service4.version=version
client.service4.group=test
client.service4.routeid=serviceRoute

# Configure the heart beat service for the server
client.service5.id=HEART_BEAT_CLIENT_ID
client.service5.name=HEART_BEAT_SERVICE
client.service5.method=receive
client.service5.version=version
client.service5.group=test
client.service5.routeid=heartBeatRoute

# Configure the service for the client service
# which used to notify the client that the service is not available or arrived
client.service6.id=serviceCenterClientServiceID
client.service6.name=serviceCenterClientService
client.service6.method=receive
client.service6.version=version
client.service6.group=test
client.service6.routeid=heartBeatRoute